logging:
  level:
    root: info
    "[com.example.demo]": debug
    "[org.apache.shardingsphere]": debug
    
spring:
  h2:
    console:
      enabled: false
  autoconfigure:
    exclude:
    # 使用druid-spring-boot-starter，但是在springboot的启动类上exclude掉DruidDataSourceAutoConfigure这个类，忽略druid连接池的默认数据源配置
    # 参考：https://www.cnblogs.com/ybyn/p/13690752.html
    - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  jpa:
    database: POSTGRESQL
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: never
  shardingsphere:
    mode:
      type: Standalone
    props:
      sql-show: true
    datasource:
        names: ds0
        ds0:
          type: com.alibaba.druid.pool.DruidDataSource
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://localhost:5432/test
          username: test
          password: test
    rules:
      sharding:
        tables:
#          t_orders:
#            logicTable: t_orders
#            actual-data-nodes: ds0.t_orders_$->{0..1}
#            table-strategy:
#              standard:
#                sharding-column: order_id
#                sharding-algorithm-name: order_inline
#            key-generator:
#              column: order_id
#              type: SNOWFLAKE
#          t_fixed_date:
#            #logicTable: t_fixed_date
#            actual-data-nodes: ds0.t_fixed_date_${2022}${(1..4).collect{t -> t.toString().padLeft(2, '0')}}
#            table-strategy:
#              standard:
#                sharding-column: create_time
#                sharding-algorithm-name: fixed_date_algorithm
#            key-generate-strategy:
#              column: id
#              key-generator-name: snowflake
#              key-generator-column-name: id
#              props:
#                worker:
#                  id: 123
          t_auto_create_table:
            logicTable: t_auto_create_table
            actual-data-nodes: ds0.t_auto_create_table_${20221115}
            #actual-data-nodes: ds0.t_auto_create_table_${20221115..20221118}
            table-strategy:
              standard:
                key-generator-colunmn: id
                sharding-column: create_time
                sharding-algorithm-name: auto_create_table_algorithm
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
          test_data:
            logicTable: test_data
            actual-data-nodes: ds0.test_data_202211,ds0.test_data_202212,ds0.test_data_202301
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
            table-strategy:
              standard:
                key-generator-colunmn: id
                sharding-column: date_time
                sharding-algorithm-name: fixed_date_algorithm
        key-generators:
          snowflake:
            type: SNOWFLAKE
        sharding-algorithms:
          order_inline:
            type: inline
            props:
              algorithm-expression: t_orders_$->{order_id % 2}
          fixed_date_algorithm:
            type: CLASS_BASED
            props:
              strategy: STANDARD
              algorithmClassName: com.example.demo.sharding.AppStandardShardingAlgorithm
          auto_create_table_algorithm:
            type: CLASS_BASED
            props:
              strategy: STANDARD
              algorithmClassName: com.example.demo.sharding.AutoCreateTableShardingAlgorithm
                
              
